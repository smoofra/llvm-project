Bottom: 3274b21e1af0a86c3b468828ac15d56ccc6488ad
Top:    3a546616933db3b9513e7eda6b071879e5663fad
Author: Lawrence D'Anna <lawrence_danna@apple.com>
Date:   2019-10-16 12:45:19 -0700

Refresh of inspect-cmd

---
diff --git a/lldb/packages/Python/lldbsuite/test/commands/command/script/TestCommandScript.py b/lldb/packages/Python/lldbsuite/test/commands/command/script/TestCommandScript.py
index 673fc8d40e1..9542d0264a6 100644
--- a/lldb/packages/Python/lldbsuite/test/commands/command/script/TestCommandScript.py
+++ b/lldb/packages/Python/lldbsuite/test/commands/command/script/TestCommandScript.py
@@ -22,27 +22,20 @@ class CmdPythonTestCase(TestBase):
     def pycmd_tests(self):
         self.runCmd("command source py_import")
 
-        if sys.version_info[:2] >= (3, 3) or sys.version_info.major < 3:
-            # Test a bunch of different kinds of python callables with
-            # both 4 and 5 positional arguments.
-            #
-            # This uses inspect.signature to get the right answer, which
-            # was introduced in python 3.3
-            #
-            # The old method without inspect.signature seems to actually be
-            # correct for python 2
-            self.expect("foobar", substrs=["All good"])
-            self.expect("foobar4", substrs=["All good"])
-            self.expect("vfoobar", substrs=["All good"])
-            self.expect("v5foobar", substrs=["All good"])
-            self.expect("sfoobar", substrs=["All good"])
-            self.expect("cfoobar", substrs=["All good"])
-            self.expect("ifoobar", substrs=["All good"])
-            self.expect("sfoobar4", substrs=["All good"])
-            self.expect("cfoobar4", substrs=["All good"])
-            self.expect("ifoobar4", substrs=["All good"])
-            self.expect("ofoobar", substrs=["All good"])
-            self.expect("ofoobar4", substrs=["All good"])
+        # Test a bunch of different kinds of python callables with
+        # both 4 and 5 positional arguments.
+        self.expect("foobar", substrs=["All good"])
+        self.expect("foobar4", substrs=["All good"])
+        self.expect("vfoobar", substrs=["All good"])
+        self.expect("v5foobar", substrs=["All good"])
+        self.expect("sfoobar", substrs=["All good"])
+        self.expect("cfoobar", substrs=["All good"])
+        self.expect("ifoobar", substrs=["All good"])
+        self.expect("sfoobar4", substrs=["All good"])
+        self.expect("cfoobar4", substrs=["All good"])
+        self.expect("ifoobar4", substrs=["All good"])
+        self.expect("ofoobar", substrs=["All good"])
+        self.expect("ofoobar4", substrs=["All good"])
 
         # Verify command that specifies eCommandRequiresTarget returns failure
         # without a target.
