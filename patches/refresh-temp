Bottom: cf4b77651fadd2cc20d3b32f7ba5765de53f59ce
Top:    a185e69d2f33030968491b6327658972950a17e1
Author: Lawrence D'Anna <lawrence_danna@apple.com>
Date:   2019-10-10 18:45:28 -0700

Refresh of OpenOptions

---
diff --git a/lldb/source/Host/common/File.cpp b/lldb/source/Host/common/File.cpp
index b9550d6a254..2b096abdf0c 100644
--- a/lldb/source/Host/common/File.cpp
+++ b/lldb/source/Host/common/File.cpp
@@ -39,7 +39,6 @@ using namespace lldb;
 using namespace lldb_private;
 using llvm::Expected;
 
-
 static Expected<const char *> GetStreamOpenModeFromOptions(uint32_t options) {
   if (options & File::eOpenOptionAppend) {
     if (options & File::eOpenOptionRead) {
@@ -759,4 +758,3 @@ mode_t File::ConvertOpenOptionsForPOSIXOpen(OpenOptions open_options) {
 
   return mode;
 }
-
diff --git a/lldb/source/Plugins/ScriptInterpreter/Python/PythonDataObjects.cpp b/lldb/source/Plugins/ScriptInterpreter/Python/PythonDataObjects.cpp
index b2c424d42ba..ed8221ea2e5 100644
--- a/lldb/source/Plugins/ScriptInterpreter/Python/PythonDataObjects.cpp
+++ b/lldb/source/Plugins/ScriptInterpreter/Python/PythonDataObjects.cpp
@@ -1090,8 +1090,10 @@ FileUP PythonFile::GetUnderlyingFile() const {
   // File object knows about that.
   PythonString py_mode = GetAttributeValue("mode").AsType<PythonString>();
   auto options = File::GetOptionsFromMode(py_mode.GetString());
-  auto file = std::unique_ptr<File>(
-      new NativeFile(PyObject_AsFileDescriptor(m_py_obj), options, false));
+  if (!options)
+    return nullptr;
+  auto file = std::unique_ptr<File>(new NativeFile(
+      PyObject_AsFileDescriptor(m_py_obj), options.get(), false));
   if (!file->IsValid())
     return nullptr;
   return file;
