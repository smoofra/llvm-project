Bottom: 3039a9d4c9b925eb4842b030710bd5af577589da
Top:    967f99bde8ed30e29063f860347e647087d52998
Author: Lawrence D'Anna <lawrence_danna@apple.com>
Date:   2019-10-01 11:39:05 -0700

Refresh of new-api-class-sbfile

---
diff --git a/lldb/include/lldb/API/SBFile.h b/lldb/include/lldb/API/SBFile.h
index efd70966b9a..da330440a99 100644
--- a/lldb/include/lldb/API/SBFile.h
+++ b/lldb/include/lldb/API/SBFile.h
@@ -26,8 +26,8 @@ public:
   bool IsValid() const;
   SBError Close();
 
-  operator bool() const { return IsValid(); }
-  bool operator!() const { return !IsValid(); }
+  operator bool() const;
+  bool operator!() const;
 
 private:
   FileSP m_opaque_sp;
diff --git a/lldb/source/API/SBFile.cpp b/lldb/source/API/SBFile.cpp
index b67078afd0d..fc4f5572f01 100644
--- a/lldb/source/API/SBFile.cpp
+++ b/lldb/source/API/SBFile.cpp
@@ -88,6 +88,16 @@ SBError SBFile::Close() {
   return LLDB_RECORD_RESULT(error);
 }
 
+SBFile::operator bool() const {
+  LLDB_RECORD_METHOD_CONST_NO_ARGS(bool, SBFile, operator bool);
+  return LLDB_RECORD_RESULT(IsValid());
+}
+
+bool SBFile::operator!() const {
+  LLDB_RECORD_METHOD_CONST_NO_ARGS(bool, SBFile, operator!);
+  return LLDB_RECORD_RESULT(!IsValid());
+}
+
 namespace lldb_private {
 namespace repro {
 template <> void RegisterMethods<SBFile>(Registry &R) {
@@ -95,6 +105,8 @@ template <> void RegisterMethods<SBFile>(Registry &R) {
   LLDB_REGISTER_CONSTRUCTOR(SBFile, (int, const char *, bool));
   LLDB_REGISTER_METHOD(lldb::SBError, SBFile, Flush, ());
   LLDB_REGISTER_METHOD_CONST(bool, SBFile, IsValid, ());
+  LLDB_REGISTER_METHOD_CONST(bool, SBFile, operator bool,());
+  LLDB_REGISTER_METHOD_CONST(bool, SBFile, operator!,());
   LLDB_REGISTER_METHOD(lldb::SBError, SBFile, Close, ());
 }
 } // namespace repro
