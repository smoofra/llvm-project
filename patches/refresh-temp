Bottom: c22901dd3c7a3c6ff0d3955fa88a056b0d8b955a
Top:    c4c5f3f7819d6ac76cd6e8cedef76fc945c55712
Author: Lawrence D'Anna <lawrence_danna@apple.com>
Date:   2019-10-11 13:18:50 -0700

Refresh of HandleProcessEvent

---
diff --git a/lldb/packages/Python/lldbsuite/test/python_api/default-constructor/sb_process.py b/lldb/packages/Python/lldbsuite/test/python_api/default-constructor/sb_process.py
index a860a8a2a48..93e43d4433f 100644
--- a/lldb/packages/Python/lldbsuite/test/python_api/default-constructor/sb_process.py
+++ b/lldb/packages/Python/lldbsuite/test/python_api/default-constructor/sb_process.py
@@ -14,7 +14,7 @@ def fuzz_obj(obj):
     event = lldb.SBEvent()
     try:
         obj.ReportEventState(event, None)
-    except TypeError:
+    except Exception:
         pass
     obj.AppendEventStateReport(event, lldb.SBCommandReturnObject())
     error = lldb.SBError()
diff --git a/lldb/source/API/SBProcess.cpp b/lldb/source/API/SBProcess.cpp
index e7b79947e14..45aaa0bd2d8 100644
--- a/lldb/source/API/SBProcess.cpp
+++ b/lldb/source/API/SBProcess.cpp
@@ -355,13 +355,10 @@ void SBProcess::ReportEventState(const SBEvent &event, FileSP out) const {
 
   ProcessSP process_sp(GetSP());
   if (process_sp) {
+    StreamFile stream(out);
     const StateType event_state = SBProcess::GetStateFromEvent(event);
-    char message[1024];
-    size_t message_len = ::snprintf(
-        message, sizeof(message), "Process %" PRIu64 " %s\n",
+    stream.Printf("Process %" PRIu64 " %s\n",
         process_sp->GetID(), SBDebugger::StateAsCString(event_state));
-    if (message_len > 0)
-      out->Write((void *)message, message_len);
   }
 }
