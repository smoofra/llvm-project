Bottom: a92e503eadbf1dbaa7fc547b22d7282ed18719fa
Top:    3ececac938d004dbf9814c32e718ad8b654c1c62
Author: Lawrence D'Anna <lawrence_danna@apple.com>
Date:   2019-10-20 13:06:03 -0700

Refresh of no-more-reset

---
diff --git a/lldb/source/Plugins/ScriptInterpreter/Python/PythonDataObjects.cpp b/lldb/source/Plugins/ScriptInterpreter/Python/PythonDataObjects.cpp
index cc8e4f94093..540fa40d5e4 100644
--- a/lldb/source/Plugins/ScriptInterpreter/Python/PythonDataObjects.cpp
+++ b/lldb/source/Plugins/ScriptInterpreter/Python/PythonDataObjects.cpp
@@ -1053,7 +1053,7 @@ def main(exc_type, exc_value, tb):
   return f.getvalue()
 )";
 
-std::string PythonException::ReadBacktraceRecursive(int limit) const {
+std::string PythonException::ReadBacktraceRecursive(unsigned limit) const {
 
   if (!m_traceback)
     return toCString();
@@ -1068,7 +1068,7 @@ std::string PythonException::ReadBacktraceRecursive(int limit) const {
     Twine message =
         Twine(toCString()) + "\n" +
         "Traceback unavailble, an error occurred while reading it:\n";
-    if (limit > 0)
+    if (limit == 0)
       return (message + llvm::toString(backtrace.takeError())).str();
 
     std::string backtrace2;
diff --git a/lldb/source/Plugins/ScriptInterpreter/Python/PythonDataObjects.h b/lldb/source/Plugins/ScriptInterpreter/Python/PythonDataObjects.h
index cb0bf8eb330..441325e30b7 100644
--- a/lldb/source/Plugins/ScriptInterpreter/Python/PythonDataObjects.h
+++ b/lldb/source/Plugins/ScriptInterpreter/Python/PythonDataObjects.h
@@ -688,7 +688,7 @@ public:
   void log(llvm::raw_ostream &OS) const override;
   std::error_code convertToErrorCode() const override;
   bool Matches(PyObject *exc) const;
-  std::string ReadBacktraceRecursive(int limit = 1) const;
+  std::string ReadBacktraceRecursive(unsigned limit = 1u) const;
   std::string ReadBacktrace() const { return ReadBacktraceRecursive(); };
 };
