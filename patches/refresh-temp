Bottom: c3df7d1bab9d778696f8b44b7a3ebdfdc826d5d1
Top:    8646774ef03672e72266573e1728f99b922b33e4
Author: Lawrence D'Anna <lawrence_danna@apple.com>
Date:   2019-10-14 11:54:36 -0700

Refresh of eliminate-virtual

---
diff --git a/lldb/source/Plugins/ScriptInterpreter/Python/PythonDataObjects.h b/lldb/source/Plugins/ScriptInterpreter/Python/PythonDataObjects.h
index 1fb3f05fcf9..321bb84d87d 100644
--- a/lldb/source/Plugins/ScriptInterpreter/Python/PythonDataObjects.h
+++ b/lldb/source/Plugins/ScriptInterpreter/Python/PythonDataObjects.h
@@ -396,7 +396,6 @@ public:
 class PythonBytes : public TypedPythonObject<PythonBytes> {
 public:
   using TypedPythonObject::TypedPythonObject;
-  PythonBytes();
   explicit PythonBytes(llvm::ArrayRef<uint8_t> bytes);
   PythonBytes(const uint8_t *bytes, size_t length);
 
@@ -414,7 +413,6 @@ public:
 class PythonByteArray : public TypedPythonObject<PythonByteArray> {
 public:
   using TypedPythonObject::TypedPythonObject;
-  PythonByteArray();
   explicit PythonByteArray(llvm::ArrayRef<uint8_t> bytes);
   PythonByteArray(const uint8_t *bytes, size_t length);
   PythonByteArray(const PythonBytes &object);
@@ -435,6 +433,8 @@ public:
   using TypedPythonObject::TypedPythonObject;
   static llvm::Expected<PythonString> FromUTF8(llvm::StringRef string);
 
+  PythonString() : TypedPythonObject() {} // MSVC requires this for some reason
+
   explicit PythonString(llvm::StringRef string); // safe, null on error
 
   static bool Check(PyObject *py_obj);
