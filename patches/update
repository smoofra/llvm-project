Bottom: b52007f77344b5ee5e21680cff19f060928824e4
Top:    d93997364e2ccb234372036dd9fab5f26c3f86fe
Author: Lawrence D'Anna <lawrence_danna@apple.com>
Date:   2019-10-05 14:00:53 -0700

update TestRunCommandInterpreterAPI to use SBFile

If you look at what this test is doing, it's actually quite 
mysterious why it works at all.   It sets the input file 
inside a "with open".   As soon as the with block ends, 
that file will be closed.   And yet somehow LLDB reads 
commands from it anyway.    What's actually happening is that
the file descriptor gets dup'd when something inside LLDB
calls File::GetStream().   I think it's fair to say that 
what this test is doing is illegal and it has no right 
to expect it to work.

This patch updates the test to use the SBFile api, and 
actually transfers ownership of the original file descriptor
to the debugger.



---
diff --git a/lldb/packages/Python/lldbsuite/test/python_api/interpreter/TestRunCommandInterpreterAPI.py b/lldb/packages/Python/lldbsuite/test/python_api/interpreter/TestRunCommandInterpreterAPI.py
index a82fd7326d8..c594796736d 100644
--- a/lldb/packages/Python/lldbsuite/test/python_api/interpreter/TestRunCommandInterpreterAPI.py
+++ b/lldb/packages/Python/lldbsuite/test/python_api/interpreter/TestRunCommandInterpreterAPI.py
@@ -7,6 +7,7 @@ from lldbsuite.test.lldbtest import *
 
 class CommandRunInterpreterAPICase(TestBase):
 
+    NO_DEBUG_INFO_TESTCASE = True
     mydir = TestBase.compute_mydir(__file__)
 
     def setUp(self):
@@ -17,13 +18,12 @@ class CommandRunInterpreterAPICase(TestBase):
         with open(self.stdin_path, 'w') as input_handle:
             input_handle.write("nonexistingcommand\nquit")
 
-        with open(self.stdin_path, 'r') as input_handle:
-            self.dbg.SetInputFileHandle(input_handle, False)
+        self.dbg.SetInputFile(open(self.stdin_path, 'r'))
 
         # No need to track the output
         devnull = open(os.devnull, 'w')
-        self.dbg.SetOutputFileHandle(devnull, False)
-        self.dbg.SetErrorFileHandle(devnull, False)
+        self.dbg.SetOutputFile(devnull)
+        self.dbg.SetErrorFile(devnull)
 
     @add_test_categories(['pyapi'])
     def test_run_session_with_error_and_quit(self):
