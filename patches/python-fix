Bottom: 474672adb8776280d3ef807585711eb4460cd86d
Top:    51df8060d56494cecfeaf731b2e947ac33ff5a16
Author: Lawrence D'Anna <lawrence_danna@apple.com>
Date:   2019-10-09 14:28:04 -0700

fix python library path on ubuntu 18.04 LTS

When building on ubuntu 18.04 LTS, the python path returned by
./bin/lldb -P is incorrect.   It should be `lib/python3.6/site-packages`,
but instead we get `lib/python3/dist-packages`

This is because distutils.sysconfig.get_python_lib can behave
differently based on whether a prefix is passed in or not.
Ubuntu's python from this era wll return `/usr/lib/python3/dist-packages`
for no prefix, but it will return `$prefix/lib/python3.6/site-packages`
if there is one.   If the path passed is the empty string, it will
return `lib/python3/dist-packages`, which appears to be a bug.

XCode's python will also behave similarly, returning
/Library/Python/3.7/site-packages for the no-prefix case.

This patch works around strange and buggy python configurations by 
passing a dummy prefix "foo", and then stripping it out.   That seems
to be the only way to be sure get_python_lib will not apply some 
distro-specific logic for installing python libraries without an 
install prefix.

---
diff --git a/lldb/CMakeLists.txt b/lldb/CMakeLists.txt
index 527d087ab87..192ebdd30e8 100644
--- a/lldb/CMakeLists.txt
+++ b/lldb/CMakeLists.txt
@@ -38,8 +38,10 @@ endif()
 
 if (NOT LLDB_DISABLE_PYTHON)
   execute_process(
+    # Some python configurations will misbehave if you pass prefix='', so we pass
+    # 'foo' and then strip it off the returned prefix.
     COMMAND ${PYTHON_EXECUTABLE}
-        -c "import distutils.sysconfig; print(distutils.sysconfig.get_python_lib(False, False, ''))"
+        -c "import distutils.sysconfig; print(distutils.sysconfig.get_python_lib(False, False, 'foo')[4:])"
     OUTPUT_VARIABLE LLDB_PYTHON_DEFAULT_RELATIVE_PATH
     OUTPUT_STRIP_TRAILING_WHITESPACE)
